{"version":3,"sources":["components/Content/Login/Login.module.css","components/Common/Forms/FormsControls.module.css","utls/validators/validators.js","components/Common/Forms/FormsControl.js","components/Content/Login/Login.jsx"],"names":["module","exports","required","value","FormControl","input","meta","touched","error","props","child","hasError","className","css","formControl","children","Input","restProps","createField","placeholder","name","validators","component","text","inputBlock","Field","validate","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","type","summaryError","btn","connect","state","isAuth","auth","login","to","formPage","header","formData","email","password","rememberMe"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,SAAW,wBAAwB,OAAS,sBAAsB,KAAO,oBAAoB,MAAQ,qBAAqB,IAAM,mBAAmB,aAAe,8B,oBCApLD,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,MAAQ,+B,uFCDnGC,EAAW,SAAAC,GACpB,IAAGA,EAGH,MAAO,qB,mCCALC,EAAc,SAAC,GAAqD,EAApDC,MAAqD,IAAD,IAA7CC,KAAOC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,MAAkBC,GAAW,EAArBC,MAAqB,yCAChEC,EAAWJ,GAAWC,EAC5B,OACI,yBAAKI,UAAWC,IAAIC,YAAc,KAAOH,EAAWE,IAAIL,MAAQ,KAC5D,6BACKC,EAAMM,UAEVJ,GAAY,8BAAOH,KAUnBQ,EAAQ,SAACP,GAAW,IACtBJ,EAAoCI,EAApCJ,MAAuBY,GAAaR,EAA7BH,KAA6BG,EAAvBC,MADQ,YACeD,EADf,2BAE5B,OAAO,kBAAC,EAAgBA,EAAO,yCAAOG,UAAWC,IAAIR,OAAWA,EAAWY,MAGlEC,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2Cb,EAA3C,uDAAmD,GAAIc,EAAvD,uDAA8D,GAA9D,OACvB,yBAAKX,UAAWC,IAAIW,YAChB,kBAACC,EAAA,EAAD,eAAON,YAAaA,EACbC,KAAMA,EACNM,SAAUL,EACVC,UAAWA,GACPb,IACRc,I,uBCZPI,EAAiBC,YAAU,CAC3BC,KAAM,SADWD,EAZL,SAACnB,GACb,OACI,0BAAMqB,SAAUrB,EAAMsB,aAAcnB,UAAWC,IAAIgB,MAC9CX,EAAY,QAAS,QAAS,CAAChB,GAAWc,GAC1CE,EAAY,WAAY,WAAY,CAAChB,GAAWc,EAAO,CAACgB,KAAM,aAC9Dd,EAAY,KAAM,aAAc,KAAM,QAAS,CAACc,KAAM,YAAa,gBAClEvB,EAAMD,OAAS,yBAAKI,UAAWC,IAAIoB,cAAexB,EAAMD,OAC1D,4BAAQI,UAAWC,IAAIqB,KAAvB,aA4BGC,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,WAA1BJ,EAnBC,SAAC1B,GAIb,OAAIA,EAAM4B,OACC,kBAAC,IAAD,CAAUG,GAAI,aAGrB,yBAAK5B,UAAWC,IAAI4B,UAChB,wBAAI7B,UAAWC,IAAI6B,QAAnB,SACA,kBAACf,EAAD,CAAgBG,SATP,SAACa,GACdlC,EAAM8B,MAAMI,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/4.cd25312f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formPage\":\"Login_formPage__3SJ0F\",\"header\":\"Login_header__1d-mZ\",\"form\":\"Login_form__14jKH\",\"input\":\"Login_input__HnaaW\",\"btn\":\"Login_btn__2wlxh\",\"summaryError\":\"Login_summaryError__2C7W1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__7cm_P\",\"error\":\"FormsControls_error__2ffT7\",\"input\":\"FormsControls_input__kuI4Z\"};","export const required = value => {\r\n    if(value){\r\n        return undefined;\r\n    }\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}","import React from \"react\";\r\nimport css from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, child, ...props}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={css.formControl + \" \" + (hasError ? css.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input className={css.input} {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div className={css.inputBlock}>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        />{text}\r\n    </div>\r\n)\r\n\r\n\r\n","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport css from './Login.module.css'\r\nimport {required} from \"../../../utls/validators/validators\";\r\nimport {createField, Input} from \"../../Common/Forms/FormsControl\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../../Redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={css.form}>\r\n            {createField('login', 'email', [required], Input)}\r\n            {createField('password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', null, 'input', {type: 'checkbox'}, ' remember me')}\r\n            { props.error && <div className={css.summaryError}>{props.error}</div>}\r\n            <button className={css.btn}>login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nlet LoginPage = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div className={css.formPage}>\r\n            <h1 className={css.header}>login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(LoginPage)"],"sourceRoot":""}