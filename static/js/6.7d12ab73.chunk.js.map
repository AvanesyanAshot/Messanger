{"version":3,"sources":["components/Content/Messages/Messages.module.css","components/Content/Messages/Message/message.jsx","components/Content/Messages/Message/correspondence.jsx","components/Content/Messages/Messages.jsx","Redux/Selectors/messagesSelectors.js","components/Content/Messages/MessagesContainer.jsx"],"names":["module","exports","MessageBlock","React","memo","props","console","log","onClick","alert","id","className","css","messageItem","photo","content","name","time","message","сorrespondence","MessageFormRedux","reduxForm","form","onSubmit","handleSubmit","corManage","Field","component","placeholder","btn","Messages","newMessages","state","map","m","key","newCorrespondence","correspondence","isAuth","section","messageList","messagesTitle","corTitle","value","addMessage","to","getMessages","compose","connect","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,YAAc,8BAA8B,YAAc,8BAA8B,cAAgB,gCAAgC,MAAQ,wBAAwB,QAAU,0BAA0B,KAAO,uBAAuB,KAAO,uBAAuB,QAAU,0BAA0B,sBAAiB,sCAAiC,SAAW,2BAA2B,UAAY,4BAA4B,IAAM,wB,sFCoBzdC,EAhBMC,IAAMC,MAAK,SAACC,GAE7B,OADAC,QAAQC,IAAI,UAGR,yBAAKC,QAAS,kBAAMC,MAAMJ,EAAMK,KAAKC,UAAWC,IAAIC,aAChD,yBAAKF,UAAWC,IAAIE,QAEpB,yBAAKH,UAAWC,IAAIG,SAChB,0BAAMJ,UAAWC,IAAII,MAAOX,EAAMW,MAClC,0BAAML,UAAWC,IAAIK,MAAOZ,EAAMY,MAClC,uBAAGN,UAAWC,IAAIM,SAAUb,EAAMa,cCLnCC,EARQ,SAACd,GACpB,OACI,6BACI,2BAAIA,EAAMa,W,yBCahBE,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EAVL,SAAChB,GACjB,OACI,0BAAMkB,SAAUlB,EAAMmB,aAAcb,UAAWC,IAAIa,WAC/C,kBAACC,EAAA,EAAD,CAAOV,KAAK,UACLW,UAAW,WACXC,YAAY,+GACnB,4BAAQjB,UAAWC,IAAIiB,KAAvB,8DAwCGC,EAlCE,SAACzB,GAEd,IAAI0B,EAAc1B,EAAM2B,MAAMd,QAAQe,KAAI,SAAAC,GAAC,OACvC,kBAAC,EAAD,CAAcxB,GAAIwB,EAAExB,GAAIyB,IAAKD,EAAExB,GAAIM,KAAMkB,EAAElB,KAAMC,KAAMiB,EAAEjB,KAAMC,QAASgB,EAAEhB,aAG1EkB,EAAoB/B,EAAM2B,MAAMK,eAAeJ,KAAI,SAAAC,GAAC,OACpD,kBAAC,EAAD,CAAgBC,IAAKD,EAAExB,GAAIQ,QAASgB,EAAEhB,aAO1C,OAAKb,EAAMiC,OAEP,yBAAK3B,UAAWC,IAAI2B,SAChB,yBAAK5B,UAAWC,IAAI4B,aAChB,wBAAI7B,UAAWC,IAAI6B,eAAnB,iBACCV,GAEL,yBAAKpB,UAAWC,IAAIO,qBAChB,yBAAKR,UAAWC,IAAI8B,UAApB,SAGA,yBAAK/B,UAAU,WACVyB,GAEL,kBAAChB,EAAD,CAAkBG,SAlBb,SAACoB,GACdtC,EAAMuC,WAAWD,EAAMzB,cAGD,kBAAC,IAAD,CAAU2B,GAAI,Y,wBClC/BC,EAAc,SAACd,GACxB,OAAOA,EAAMF,UCYFiB,sBACXC,aAPkB,SAAChB,GACnB,MAAO,CACHA,MAAOc,EAAYd,MAKE,CAACY,iBAC1BK,IAFWF,CAGbjB","file":"static/js/6.7d12ab73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Messages_section__yLO4B\",\"messageList\":\"Messages_messageList__3YP1e\",\"messageItem\":\"Messages_messageItem__1aX8s\",\"messagesTitle\":\"Messages_messagesTitle__1uPmC\",\"photo\":\"Messages_photo__13Xm-\",\"content\":\"Messages_content__SHPuA\",\"name\":\"Messages_name__30YwN\",\"time\":\"Messages_time__2oiS0\",\"message\":\"Messages_message__3SUyq\",\"сorrespondence\":\"Messages_сorrespondence__mircx\",\"corTitle\":\"Messages_corTitle__1n3GE\",\"corManage\":\"Messages_corManage__mzmeI\",\"btn\":\"Messages_btn__19Syx\"};","import React from \"react\";\r\nimport css from \"../Messages.module.css\"\r\n\r\n// TODO Фиксануть position сообщение (появлятся в header-e)\r\n\r\nconst MessageBlock = React.memo((props) => {\r\n    console.log('render')\r\n    return (\r\n\r\n        <div onClick={() => alert(props.id)} className={css.messageItem}>\r\n            <div className={css.photo}>\r\n            </div>\r\n            <div className={css.content}>\r\n                <span className={css.name}>{props.name}</span>\r\n                <time className={css.time}>{props.time}</time>\r\n                <p className={css.message}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MessageBlock","import React from \"react\";\r\n\r\nconst сorrespondence = (props) => {\r\n    return (\r\n        <div >\r\n            <p>{props.message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default сorrespondence","import React from \"react\";\r\nimport css from \"./Messages.module.css\"\r\nimport MessageBlock from \"./Message/message\";\r\nimport Correspondence from \"./Message/correspondence\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={css.corManage}>\r\n            <Field name='message'\r\n                   component={'textarea'}\r\n                   placeholder='Написать сообщение...'></Field>\r\n            <button className={css.btn}>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\nconst MessageFormRedux = reduxForm({form: 'message'})(MessageForm)\r\n\r\nconst Messages = (props) => {\r\n    // MAP jsx\r\n    let newMessages = props.state.message.map(m => (\r\n        <MessageBlock id={m.id} key={m.id} name={m.name} time={m.time} message={m.message}/>)\r\n    )\r\n\r\n    let newCorrespondence = props.state.correspondence.map(m => (\r\n        <Correspondence key={m.id} message={m.message}/>\r\n    ))\r\n    //Functions\r\n    let addMessage = (value) => {\r\n        props.addMessage(value.message)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n    return (\r\n        <div className={css.section}>\r\n            <div className={css.messageList}>\r\n                <h4 className={css.messagesTitle}>Last messages</h4>\r\n                {newMessages}\r\n            </div>\r\n            <div className={css.сorrespondence}>\r\n                <div className={css.corTitle}>\r\n                    Title\r\n                </div>\r\n                <div className=\"css.cor\">\r\n                    {newCorrespondence}\r\n                </div>\r\n                <MessageFormRedux onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages","export const getMessages = (state) => {\r\n    return state.Messages\r\n}\r\n\r\n","import {addMessage} from '../../../Redux/messagesReducer';\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getMessages} from \"../../../Redux/Selectors/messagesSelectors\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: getMessages(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(Messages)"],"sourceRoot":""}